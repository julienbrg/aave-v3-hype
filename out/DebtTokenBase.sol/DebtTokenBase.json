{"abi":[{"type":"function","name":"DELEGATION_WITH_SIG_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"EIP712_REVISION","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"approveDelegation","inputs":[{"name":"delegatee","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"borrowAllowance","inputs":[{"name":"fromUser","type":"address","internalType":"address"},{"name":"toUser","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"delegationWithSig","inputs":[{"name":"delegator","type":"address","internalType":"address"},{"name":"delegatee","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"nonces","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"BorrowAllowanceDelegated","inputs":[{"name":"fromUser","type":"address","indexed":true,"internalType":"address"},{"name":"toUser","type":"address","indexed":true,"internalType":"address"},{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"ECDSAInvalidSignature","inputs":[]},{"type":"error","name":"ECDSAInvalidSignatureLength","inputs":[{"name":"length","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ECDSAInvalidSignatureS","inputs":[{"name":"s","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"InsufficientBorrowAllowance","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"allowance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidExpiration","inputs":[]},{"type":"error","name":"InvalidSignature","inputs":[]},{"type":"error","name":"ZeroAddressNotValid","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"DELEGATION_WITH_SIG_TYPEHASH()":"f3bfc738","DOMAIN_SEPARATOR()":"3644e515","EIP712_REVISION()":"78160376","approveDelegation(address,uint256)":"c04a8a10","borrowAllowance(address,address)":"6bd76d24","delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)":"0b52d558","nonces(address)":"7ecebe00"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBorrowAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExpiration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressNotValid\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromUser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toUser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BorrowAllowanceDelegated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_WITH_SIG_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIP712_REVISION\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromUser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toUser\",\"type\":\"address\"}],\"name\":\"borrowAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegationWithSig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"InsufficientBorrowAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in borrowing.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"BorrowAllowanceDelegated(address,address,address,uint256)\":{\"details\":\"Emitted on `approveDelegation` and `borrowAllowance\",\"params\":{\"amount\":\"The amount being delegated\",\"asset\":\"The address of the delegated asset\",\"fromUser\":\"The address of the delegator\",\"toUser\":\"The address of the delegatee\"}}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Return cached value if chainId matches cache, otherwise recomputes separator\",\"returns\":{\"_0\":\"The domain separator of the token at current chain\"}},\"approveDelegation(address,uint256)\":{\"params\":{\"amount\":\"The maximum amount being delegated.\",\"delegatee\":\"The address receiving the delegated borrowing power\"}},\"borrowAllowance(address,address)\":{\"params\":{\"fromUser\":\"The user to giving allowance\",\"toUser\":\"The user to give allowance to\"},\"returns\":{\"_0\":\"The current allowance of `toUser`\"}},\"constructor\":{\"details\":\"Constructor.\"},\"delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp, type(uint256).max for max deadline\",\"delegatee\":\"The delegatee that can use the credit\",\"delegator\":\"The delegator of the credit\",\"r\":\"The R signature param\",\"s\":\"The S signature param\",\"v\":\"The V signature param\",\"value\":\"The amount to be delegated\"}},\"nonces(address)\":{\"params\":{\"owner\":\"The address for which the nonce is being returned\"},\"returns\":{\"_0\":\"The nonce value for the input address`\"}}},\"title\":\"DebtTokenBase\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Get the domain separator for the token\"},\"approveDelegation(address,uint256)\":{\"notice\":\"Delegates borrowing power to a user on the specific debt token. Delegation will still respect the liquidation constraints (even if delegated, a delegatee cannot force a delegator HF to go below 1)\"},\"borrowAllowance(address,address)\":{\"notice\":\"Returns the borrow allowance of the user\"},\"delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates borrowing power to a user on the specific debt token via ERC712 signature\"},\"nonces(address)\":{\"notice\":\"Returns the nonce value for address specified as parameter\"}},\"notice\":\"Base contract for different types of debt tokens, like VariableDebtToken\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/protocol/tokenization/base/DebtTokenBase.sol\":\"DebtTokenBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":solidity-utils/=lib/solidity-utils/src/\"]},\"sources\":{\"lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"src/contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0x5bd59392b6565cfc2464ac04cef09ae5153ef2f3cdf4ea2a4174b811967f5dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de757ff04c70671470160baae182317dd6987a2ef0c53378325896f884489adc\",\"dweb:/ipfs/QmeuNFcJGDTzqpDBMKGRM2x3gnj7NLS1Lz57tFsu2F9A7s\"]},\"src/contracts/interfaces/ICreditDelegationToken.sol\":{\"keccak256\":\"0x7713c297a2c71816dc3a8a59d16e4c73736e960d5a82fac93c82f1977060be42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e073f3d137a4cbd3b726a0c5ff314ae07a25b0a644648c05f408fe3abbfe248c\",\"dweb:/ipfs/QmfKetcNYSEo6kBEcLiosX5VKAuW2x86x4Ue8x1R1tfvtc\"]},\"src/contracts/misc/aave-upgradeability/VersionedInitializable.sol\":{\"keccak256\":\"0xfd1080a06007aaa1b5337d6baecee55877ddbbd362bff66a5aaf8b03122f68aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6b980ab1636c6176b031ab9ec856aa94019ae2f33b1068ef7c175d98a9665b\",\"dweb:/ipfs/Qmdsxd7bQnaPrNJ81rbEvgGio1yJpyq5WsuMtK9bY9y893\"]},\"src/contracts/protocol/libraries/helpers/Errors.sol\":{\"keccak256\":\"0x6d522a061535598e9867fdff57fce2c0f062698e1547b54b1de8bc17f6276482\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd331ff3e22cc617d5c0650265ab5feb818cd4f1bc84e5360a28a427b66f9710\",\"dweb:/ipfs/QmaE9C7N3iUqCNoexQRpp5N4hPq9wYeXf8Sz1xJPMWUvgv\"]},\"src/contracts/protocol/tokenization/base/DebtTokenBase.sol\":{\"keccak256\":\"0xf4eca303501d5c1b7c37bdb9f0920fca2004eae32377864fe057d4d597a683f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a68573eb429b1103925aa00cbdb91160c4d4eeb43940191aeaecf144f6c1aec4\",\"dweb:/ipfs/QmaCaHyvA3B1SnEQMfwnhSj1vrYCoNSx6GDmuuXD996TPb\"]},\"src/contracts/protocol/tokenization/base/EIP712Base.sol\":{\"keccak256\":\"0xfda11d978e7cda7c4f39b54444bf593836e026fc2934c803193efa0abbd9fd89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9492c7d023ed302b4a41b1a8753c569da709fb45aea986cd55b6a248c0707108\",\"dweb:/ipfs/QmdGTgzESHwvXKoyXVPavj7G6wvkG3rc7d3KDKGmfT2TBX\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ECDSAInvalidSignature"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"type":"error","name":"ECDSAInvalidSignatureLength"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"type":"error","name":"ECDSAInvalidSignatureS"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"type":"error","name":"InsufficientBorrowAllowance"},{"inputs":[],"type":"error","name":"InvalidExpiration"},{"inputs":[],"type":"error","name":"InvalidSignature"},{"inputs":[],"type":"error","name":"ZeroAddressNotValid"},{"inputs":[{"internalType":"address","name":"fromUser","type":"address","indexed":true},{"internalType":"address","name":"toUser","type":"address","indexed":true},{"internalType":"address","name":"asset","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"BorrowAllowanceDelegated","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DELEGATION_WITH_SIG_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"EIP712_REVISION","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approveDelegation"},{"inputs":[{"internalType":"address","name":"fromUser","type":"address"},{"internalType":"address","name":"toUser","type":"address"}],"stateMutability":"view","type":"function","name":"borrowAllowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"delegator","type":"address"},{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"delegationWithSig"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Return cached value if chainId matches cache, otherwise recomputes separator","returns":{"_0":"The domain separator of the token at current chain"}},"approveDelegation(address,uint256)":{"params":{"amount":"The maximum amount being delegated.","delegatee":"The address receiving the delegated borrowing power"}},"borrowAllowance(address,address)":{"params":{"fromUser":"The user to giving allowance","toUser":"The user to give allowance to"},"returns":{"_0":"The current allowance of `toUser`"}},"constructor":{"details":"Constructor."},"delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"params":{"deadline":"The deadline timestamp, type(uint256).max for max deadline","delegatee":"The delegatee that can use the credit","delegator":"The delegator of the credit","r":"The R signature param","s":"The S signature param","v":"The V signature param","value":"The amount to be delegated"}},"nonces(address)":{"params":{"owner":"The address for which the nonce is being returned"},"returns":{"_0":"The nonce value for the input address`"}}},"version":1},"userdoc":{"kind":"user","methods":{"DOMAIN_SEPARATOR()":{"notice":"Get the domain separator for the token"},"approveDelegation(address,uint256)":{"notice":"Delegates borrowing power to a user on the specific debt token. Delegation will still respect the liquidation constraints (even if delegated, a delegatee cannot force a delegator HF to go below 1)"},"borrowAllowance(address,address)":{"notice":"Returns the borrow allowance of the user"},"delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Delegates borrowing power to a user on the specific debt token via ERC712 signature"},"nonces(address)":{"notice":"Returns the nonce value for address specified as parameter"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/","solidity-utils/=lib/solidity-utils/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/contracts/protocol/tokenization/base/DebtTokenBase.sol":"DebtTokenBase"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84","urls":["bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9","dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"],"license":"MIT"},"src/contracts/dependencies/openzeppelin/contracts/Context.sol":{"keccak256":"0x5bd59392b6565cfc2464ac04cef09ae5153ef2f3cdf4ea2a4174b811967f5dac","urls":["bzz-raw://de757ff04c70671470160baae182317dd6987a2ef0c53378325896f884489adc","dweb:/ipfs/QmeuNFcJGDTzqpDBMKGRM2x3gnj7NLS1Lz57tFsu2F9A7s"],"license":"MIT"},"src/contracts/interfaces/ICreditDelegationToken.sol":{"keccak256":"0x7713c297a2c71816dc3a8a59d16e4c73736e960d5a82fac93c82f1977060be42","urls":["bzz-raw://e073f3d137a4cbd3b726a0c5ff314ae07a25b0a644648c05f408fe3abbfe248c","dweb:/ipfs/QmfKetcNYSEo6kBEcLiosX5VKAuW2x86x4Ue8x1R1tfvtc"],"license":"MIT"},"src/contracts/misc/aave-upgradeability/VersionedInitializable.sol":{"keccak256":"0xfd1080a06007aaa1b5337d6baecee55877ddbbd362bff66a5aaf8b03122f68aa","urls":["bzz-raw://4a6b980ab1636c6176b031ab9ec856aa94019ae2f33b1068ef7c175d98a9665b","dweb:/ipfs/Qmdsxd7bQnaPrNJ81rbEvgGio1yJpyq5WsuMtK9bY9y893"],"license":"MIT"},"src/contracts/protocol/libraries/helpers/Errors.sol":{"keccak256":"0x6d522a061535598e9867fdff57fce2c0f062698e1547b54b1de8bc17f6276482","urls":["bzz-raw://fd331ff3e22cc617d5c0650265ab5feb818cd4f1bc84e5360a28a427b66f9710","dweb:/ipfs/QmaE9C7N3iUqCNoexQRpp5N4hPq9wYeXf8Sz1xJPMWUvgv"],"license":"MIT"},"src/contracts/protocol/tokenization/base/DebtTokenBase.sol":{"keccak256":"0xf4eca303501d5c1b7c37bdb9f0920fca2004eae32377864fe057d4d597a683f7","urls":["bzz-raw://a68573eb429b1103925aa00cbdb91160c4d4eeb43940191aeaecf144f6c1aec4","dweb:/ipfs/QmaCaHyvA3B1SnEQMfwnhSj1vrYCoNSx6GDmuuXD996TPb"],"license":"MIT"},"src/contracts/protocol/tokenization/base/EIP712Base.sol":{"keccak256":"0xfda11d978e7cda7c4f39b54444bf593836e026fc2934c803193efa0abbd9fd89","urls":["bzz-raw://9492c7d023ed302b4a41b1a8753c569da709fb45aea986cd55b6a248c0707108","dweb:/ipfs/QmdGTgzESHwvXKoyXVPavj7G6wvkG3rc7d3KDKGmfT2TBX"],"license":"MIT"}},"version":1},"id":241}