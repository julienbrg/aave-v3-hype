{"abi":[{"type":"function","name":"emergencyEtherTransfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"emergencyTokenTransfer","inputs":[{"name":"erc20Token","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"maxRescue","inputs":[{"name":"erc20Token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"ERC20Rescued","inputs":[{"name":"caller","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"NativeTokensRescued","inputs":[{"name":"caller","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"EthTransferFailed","inputs":[]},{"type":"error","name":"OnlyRescueGuardian","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"emergencyEtherTransfer(address,uint256)":"eed88b8d","emergencyTokenTransfer(address,address,uint256)":"a3d5b255","maxRescue(address)":"d7408715"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EthTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyRescueGuardian\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Rescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeTokensRescued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyEtherTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"}],\"name\":\"maxRescue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"BGD Labs\",\"events\":{\"ERC20Rescued(address,address,address,uint256)\":{\"params\":{\"amount\":\"quantity of tokens rescued\",\"caller\":\"address that triggers the rescue\",\"to\":\"address that will receive the rescued tokens\",\"token\":\"address of the rescued token\"}},\"NativeTokensRescued(address,address,uint256)\":{\"params\":{\"amount\":\"quantity of tokens rescued\",\"caller\":\"address that triggers the rescue\",\"to\":\"address that will receive the rescued tokens\"}}},\"kind\":\"dev\",\"methods\":{\"emergencyEtherTransfer(address,uint256)\":{\"params\":{\"amount\":\"of eth to rescue\",\"to\":\"address to send the eth\"}},\"emergencyTokenTransfer(address,address,uint256)\":{\"params\":{\"amount\":\"of tokens to rescue\",\"erc20Token\":\"address of the token to rescue\",\"to\":\"address to send the tokens\"}},\"maxRescue(address)\":{\"details\":\"there's currently no way to limit the rescuable \\\"native asset\\\", as we assume erc20s as intended underlying.\",\"returns\":{\"_0\":\"the maximum amount of\"}}},\"title\":\"IRescuable\",\"version\":1},\"userdoc\":{\"events\":{\"ERC20Rescued(address,address,address,uint256)\":{\"notice\":\"emitted when erc20 tokens get rescued\"},\"NativeTokensRescued(address,address,uint256)\":{\"notice\":\"emitted when native tokens get rescued\"}},\"kind\":\"user\",\"methods\":{\"emergencyEtherTransfer(address,uint256)\":{\"notice\":\"method called to rescue ether sent erroneously to the contract. Only callable by owner\"},\"emergencyTokenTransfer(address,address,uint256)\":{\"notice\":\"method called to rescue tokens sent erroneously to the contract. Only callable by owner\"},\"maxRescue(address)\":{\"notice\":\"method that defined the maximum amount rescuable for any given asset.\"}},\"notice\":\"interface containing the objects, events and methods definitions of the Rescuable contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solidity-utils/src/contracts/utils/interfaces/IRescuable.sol\":\"IRescuable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":solidity-utils/=lib/solidity-utils/src/\"]},\"sources\":{\"lib/solidity-utils/src/contracts/utils/interfaces/IRescuable.sol\":{\"keccak256\":\"0xfc85f5f2ac586f698c34c3ff5a4470b7a4110e1b48ce33081750887060477ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://764708db49b02258d31ae52647188e689a097b1ec91b03638bed86a808f9980f\",\"dweb:/ipfs/QmV8QXPkvx7v7RxUWZz9t9CcSfmQG1s8n3UGKums7Z6dM7\"]},\"lib/solidity-utils/src/contracts/utils/interfaces/IRescuableBase.sol\":{\"keccak256\":\"0x19ab34e02d90dc36292f312bc38539eef8da1e3cd8d79e4a493d09426a4d795d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96e9ca2e9390c3d5b36fa9b6c5d5acf90222cdf1cb344c4fdb16b83a28f217bc\",\"dweb:/ipfs/QmPZx721HHLzzBdWZDZxpEvMseRwYMKQJaj6hoD32f4Shu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"EthTransferFailed"},{"inputs":[],"type":"error","name":"OnlyRescueGuardian"},{"inputs":[{"internalType":"address","name":"caller","type":"address","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"ERC20Rescued","anonymous":false},{"inputs":[{"internalType":"address","name":"caller","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"NativeTokensRescued","anonymous":false},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"emergencyEtherTransfer"},{"inputs":[{"internalType":"address","name":"erc20Token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"emergencyTokenTransfer"},{"inputs":[{"internalType":"address","name":"erc20Token","type":"address"}],"stateMutability":"view","type":"function","name":"maxRescue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"emergencyEtherTransfer(address,uint256)":{"params":{"amount":"of eth to rescue","to":"address to send the eth"}},"emergencyTokenTransfer(address,address,uint256)":{"params":{"amount":"of tokens to rescue","erc20Token":"address of the token to rescue","to":"address to send the tokens"}},"maxRescue(address)":{"details":"there's currently no way to limit the rescuable \"native asset\", as we assume erc20s as intended underlying.","returns":{"_0":"the maximum amount of"}}},"version":1},"userdoc":{"kind":"user","methods":{"emergencyEtherTransfer(address,uint256)":{"notice":"method called to rescue ether sent erroneously to the contract. Only callable by owner"},"emergencyTokenTransfer(address,address,uint256)":{"notice":"method called to rescue tokens sent erroneously to the contract. Only callable by owner"},"maxRescue(address)":{"notice":"method that defined the maximum amount rescuable for any given asset."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/","solidity-utils/=lib/solidity-utils/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/solidity-utils/src/contracts/utils/interfaces/IRescuable.sol":"IRescuable"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/solidity-utils/src/contracts/utils/interfaces/IRescuable.sol":{"keccak256":"0xfc85f5f2ac586f698c34c3ff5a4470b7a4110e1b48ce33081750887060477ed6","urls":["bzz-raw://764708db49b02258d31ae52647188e689a097b1ec91b03638bed86a808f9980f","dweb:/ipfs/QmV8QXPkvx7v7RxUWZz9t9CcSfmQG1s8n3UGKums7Z6dM7"],"license":"MIT"},"lib/solidity-utils/src/contracts/utils/interfaces/IRescuableBase.sol":{"keccak256":"0x19ab34e02d90dc36292f312bc38539eef8da1e3cd8d79e4a493d09426a4d795d","urls":["bzz-raw://96e9ca2e9390c3d5b36fa9b6c5d5acf90222cdf1cb344c4fdb16b83a28f217bc","dweb:/ipfs/QmPZx721HHLzzBdWZDZxpEvMseRwYMKQJaj6hoD32f4Shu"],"license":"MIT"}},"version":1},"id":68}